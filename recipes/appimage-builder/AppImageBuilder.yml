version: 1
script:
  # Remove any previous build
  - rm -rf $TARGET_APPDIR  || true
  - mkdir -p $TARGET_APPDIR/usr/share/icons/hicolor/scalable/apps $TARGET_APPDIR/usr/bin $TARGET_APPDIR/opt "$BUILD_DIR"
  - cp ../../resources/appimage-builder.svg $TARGET_APPDIR/usr/share/icons/hicolor/scalable/apps
  # deploy appimagetool
  - cd appimage-builder-cache
  - wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O "$BUILD_DIR/appimagetool.AppImage"
  - chmod +x "$BUILD_DIR/appimagetool.AppImage"
  - cd "$BUILD_DIR" && ./appimagetool.AppImage --appimage-extract
  - cp squashfs-root/usr/bin/appimagetool $TARGET_APPDIR/usr/bin/appimagetool
  - mkdir -p $TARGET_APPDIR/usr/lib/appimagekit/
  - cp squashfs-root/usr/lib/appimagekit/mksquashfs $TARGET_APPDIR/usr/lib/appimagekit/
  - cd ..

  # find bundle version
  - PACKAGE_VERSION=$(grep -Po 'version="\K((\d|\.)+)' ../../setup.py)
  - echo APPIMAGE_BUILDER_VERSION="$PACKAGE_VERSION-$(git rev-parse --short HEAD)" >> $BUILDER_ENV

AppDir:
  path: ./AppDir

  app_info:
    id: org.appimage-crafters.appimage-builder
    name: appimage-builder
    icon: appimage-builder
    version: 'latest'
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/bin/appimage-builder $@"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse'
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'

    include:
      - bash
      - coreutils
      - binutils
      - file
      - desktop-file-utils
      - fakeroot
      - libgdk-pixbuf2.0-dev
      - patchelf
      - python3.8
      - squashfs-tools
      - strace
      - zsync
    exclude: []

  after_bundle: |
    # configure tools 
    ln -s fakeroot-sysv $TARGET_APPDIR/usr/bin/fakeroot
    ln -s bash $TARGET_APPDIR/bin/sh

    # install appimage-builder
    python3.8 -m pip install --ignore-installed --prefix=/usr --root="$TARGET_APPDIR"  install ../../
    python3.8 -m pip install --ignore-installed --prefix=/usr --root="$TARGET_APPDIR"  install certifi

  runtime:
    version: "continuous"
    env:
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/lib/python3.8/site-packages'
      # SSL Certificates are placed in a different location for every system therefore we ship our own copy
      SSL_CERT_FILE: '${APPDIR}/usr/lib/python3.8/site-packages/certifi/cacert.pem'

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun --help
      use_host_x: true
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun --help
      use_host_x: true
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun --help
      use_host_x: true
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun --help
      use_host_x: true
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun --help
      use_host_x: true

AppImage:
  file_name: "appimage-builder-{{APPIMAGE_BUILDER_VERSION}}-x86_64.AppImage"
  update-information: 'gh-releases-zsync|AppImageCrafters|appimage-builder|latest|-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64

